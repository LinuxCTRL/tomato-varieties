<% 
const title = 'Home - Tomato Varieties Database';
const body = `
<div class="row">
    <div class="col-12">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="display-4">
                <i class="fas fa-seedling text-success me-3"></i>
                Tomato Varieties
            </h1>
            <div class="text-muted">
                <small>
                    <i class="fas fa-database me-1"></i>
                    ${totalCount} varieties
                    ${scrapedAt ? 'â€¢ Updated: ' + new Date(scrapedAt).toLocaleDateString() : ''}
                </small>
            </div>
        </div>
        
        ${varieties.length === 0 ? `
            <div class="alert alert-warning" role="alert">
                <h4 class="alert-heading">No Data Available</h4>
                <p>No tomato varieties found. Please run the scraper first:</p>
                <hr>
                <p class="mb-0">
                    <code>cd backend && python scraper.py</code> then restart the API server.
                </p>
            </div>
        ` : `
            <div class="row">
                <div class="col-md-4 mb-3">
                    <div class="card border-success">
                        <div class="card-body text-center">
                            <h5 class="card-title text-success">
                                <i class="fas fa-list-ul me-2"></i>
                                Total Varieties
                            </h5>
                            <h2 class="text-success">${totalCount}</h2>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 mb-3">
                    <div class="card border-info">
                        <div class="card-body text-center">
                            <h5 class="card-title text-info">
                                <i class="fas fa-search me-2"></i>
                                Quick Search
                            </h5>
                            <form action="/search" method="GET">
                                <div class="input-group">
                                    <input type="text" class="form-control" name="q" placeholder="Search varieties...">
                                    <button class="btn btn-info" type="submit">
                                        <i class="fas fa-search"></i>
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="card border-warning">
                        <div class="card-body text-center">
                            <h5 class="card-title text-warning">
                                <i class="fas fa-sync-alt me-2"></i>
                                Refresh Data
                            </h5>
                            <button class="btn btn-warning" onclick="refreshData()">
                                <i class="fas fa-sync-alt me-1"></i>
                                Refresh
                            </button>
                        </div>
                    </div>
                </div>
                <div class="col-md-3 mb-3">
                    <div class="card border-danger">
                        <div class="card-body text-center">
                            <h5 class="card-title text-danger">
                                <i class="fas fa-download me-2"></i>
                                Scrape Data
                            </h5>
                            <button class="btn btn-danger" onclick="scrapeData()" id="scrapeBtn">
                                <i class="fas fa-download me-1"></i>
                                Scrape Fresh Data
                            </button>
                        </div>
                    </div>
                </div>
            </div>
            
            <h2 class="mb-4">
                <i class="fas fa-list me-2"></i>
                All Varieties
            </h2>
            
            <div class="row" id="varieties-grid">
                ${varieties.map(variety => `
                    <div class="col-lg-4 col-md-6 mb-4">
                        <div class="card h-100 variety-card" onclick="window.location.href='/tomato/${encodeURIComponent(variety.slug || variety.name)}'">
                            <div class="card-body">
                                <h5 class="card-title text-success">
                                    <i class="fas fa-pepper-hot me-2"></i>
                                    ${variety.name}
                                </h5>
                                
                                ${variety.description ? `
                                    <p class="card-text text-muted">
                                        ${variety.description.substring(0, 100)}${variety.description.length > 100 ? '...' : ''}
                                    </p>
                                ` : ''}
                                
                                <div class="row text-center">
                                    ${variety.characteristics?.fruit_size || variety.growing_info?.fruit_size ? `
                                        <div class="col-6">
                                            <small class="text-muted d-block">Fruit Size</small>
                                            <span class="badge bg-primary">${variety.characteristics?.fruit_size || variety.growing_info?.fruit_size}</span>
                                        </div>
                                    ` : ''}
                                    
                                    ${variety.characteristics?.season || variety.growing_info?.season ? `
                                        <div class="col-6">
                                            <small class="text-muted d-block">Season</small>
                                            <span class="badge bg-success">${variety.characteristics?.season || variety.growing_info?.season}</span>
                                        </div>
                                    ` : ''}
                                </div>
                            </div>
                            
                            <div class="card-footer bg-transparent">
                                <small class="text-success">
                                    <i class="fas fa-arrow-right me-1"></i>
                                    Click for details
                                </small>
                            </div>
                        </div>
                    </div>
                `).join('')}
            </div>
        `}
    </div>
</div>

<script>
async function refreshData() {
    const button = event.target;
    const originalText = button.innerHTML;
    
    // Show beautiful loading overlay if available
    if (typeof showLoadingOverlay === 'function') {
        showLoadingOverlay('plant', 'Growing fresh tomato data...');
    }
    
    button.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Refreshing...';
    button.disabled = true;
    
    try {
        const response = await fetch('/api/refresh');
        const data = await response.json();
        
        if (data.error) {
            if (typeof hideLoadingOverlay === 'function') hideLoadingOverlay();
            alert('Error: ' + data.error);
        } else {
            // Show success animation if available
            if (typeof updateLoadingOverlay === 'function') {
                updateLoadingOverlay('plant', 'Success! Found ' + data.total_varieties + ' varieties!');
                setTimeout(() => {
                    if (typeof hideLoadingOverlay === 'function') hideLoadingOverlay();
                    location.reload();
                }, 2000);
            } else {
                alert('Data refreshed successfully! Found ' + data.total_varieties + ' varieties.');
                location.reload();
            }
        }
    } catch (error) {
        if (typeof hideLoadingOverlay === 'function') hideLoadingOverlay();
        alert('Failed to refresh data: ' + error.message);
    } finally {
        button.innerHTML = originalText;
        button.disabled = false;
    }
}

async function scrapeData() {
    const button = document.getElementById('scrapeBtn');
    const originalText = button.innerHTML;
    
    // Show beautiful loading overlay
    if (typeof showLoadingOverlay === 'function') {
        showLoadingOverlay('plant', 'Starting tomato scraper...');
    }
    
    button.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i>Starting Scraper...';
    button.disabled = true;
    
    try {
        const response = await fetch('/api/scrape', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        });
        const data = await response.json();
        
        if (data.error) {
            if (typeof hideLoadingOverlay === 'function') hideLoadingOverlay();
            alert('Error: ' + data.error);
        } else {
            // Show progress animation
            if (typeof updateLoadingOverlay === 'function') {
                updateLoadingOverlay('plant', data.message + ' This may take 2-5 minutes...');
            }
            
            // Start checking status
            checkScraperStatus();
        }
    } catch (error) {
        if (typeof hideLoadingOverlay === 'function') hideLoadingOverlay();
        alert('Failed to start scraper: ' + error.message);
        button.innerHTML = originalText;
        button.disabled = false;
    }
}

async function checkScraperStatus() {
    const button = document.getElementById('scrapeBtn');
    
    try {
        const response = await fetch('/api/scrape/status');
        const data = await response.json();
        
        if (data.scraper_running) {
            // Still running, check again in 5 seconds
            button.innerHTML = '<i class="fas fa-cog fa-spin me-1"></i>Scraping in Progress...';
            setTimeout(checkScraperStatus, 5000);
        } else {
            // Scraping completed
            if (typeof updateLoadingOverlay === 'function') {
                updateLoadingOverlay('plant', 'Scraping completed! Refreshing data...');
            }
            
            // Refresh the data
            setTimeout(async () => {
                try {
                    const refreshResponse = await fetch('/api/refresh');
                    const refreshData = await refreshResponse.json();
                    
                    if (typeof hideLoadingOverlay === 'function') hideLoadingOverlay();
                    
                    if (refreshData.error) {
                        alert('Scraping completed but failed to refresh: ' + refreshData.error);
                    } else {
                        alert('Success! Scraped fresh data with ' + refreshData.total_varieties + ' varieties!');
                        location.reload();
                    }
                } catch (error) {
                    if (typeof hideLoadingOverlay === 'function') hideLoadingOverlay();
                    alert('Scraping completed but failed to refresh page. Please refresh manually.');
                }
                
                button.innerHTML = '<i class="fas fa-download me-1"></i>Scrape Fresh Data';
                button.disabled = false;
            }, 2000);
        }
    } catch (error) {
        console.error('Status check failed:', error);
        // Assume completed after error
        if (typeof hideLoadingOverlay === 'function') hideLoadingOverlay();
        button.innerHTML = '<i class="fas fa-download me-1"></i>Scrape Fresh Data';
        button.disabled = false;
    }
}
</script>
`;
%>

<%- include('layout', { title, body }) %>